// <auto-generated />
using System;
using BusTicketApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusTicketApi.Data.Migrations
{
    [DbContext(typeof(BusTicketDbContext))]
    [Migration("20250702215622_InitialSeed")]
    partial class InitialSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusTicketApi.Models.Entities.AgeBasedDiscount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.HasIndex("MinAge", "MaxAge")
                        .IsUnique();

                    b.ToTable("AgeBasedDiscounts");

                    b.HasCheckConstraint("CK_AgeBasedDiscount_DiscountPercentage", "DiscountPercentage >= 0 AND DiscountPercentage <= 100");

                    b.HasCheckConstraint("CK_AgeBasedDiscount_MaxAge", "MaxAge >= MinAge");

                    b.HasCheckConstraint("CK_AgeBasedDiscount_MinAge", "MinAge >= 0");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            Description = "Free for children under 5",
                            DiscountPercentage = 100m,
                            MaxAge = 4,
                            MinAge = 0
                        },
                        new
                        {
                            DiscountId = 2,
                            Description = "50% off for children 5-12",
                            DiscountPercentage = 50m,
                            MaxAge = 12,
                            MinAge = 5
                        },
                        new
                        {
                            DiscountId = 3,
                            Description = "Full price for adults",
                            DiscountPercentage = 0m,
                            MaxAge = 50,
                            MinAge = 13
                        },
                        new
                        {
                            DiscountId = 4,
                            Description = "30% off for seniors over 50",
                            DiscountPercentage = 30m,
                            MaxAge = 150,
                            MinAge = 51
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RefundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bookings");

                    b.HasCheckConstraint("CK_Booking_RefundAmount", "RefundAmount >= 0");

                    b.HasCheckConstraint("CK_Booking_TotalAmount", "TotalAmount >= 0");

                    b.HasCheckConstraint("CK_Booking_TotalTax", "TotalTax >= 0");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingDate = new DateTime(2025, 7, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 100000,
                            Status = "Confirmed",
                            TotalAmount = 50.00m,
                            TotalTax = 5.00m
                        },
                        new
                        {
                            BookingId = 2,
                            BookingDate = new DateTime(2025, 7, 2, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 100001,
                            Status = "Confirmed",
                            TotalAmount = 80.00m,
                            TotalTax = 8.00m
                        },
                        new
                        {
                            BookingId = 3,
                            BookingDate = new DateTime(2025, 7, 2, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            CancellationDate = new DateTime(2025, 7, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 100002,
                            RefundAmount = 98.00m,
                            Status = "Cancelled",
                            TotalAmount = 140.00m,
                            TotalTax = 14.00m
                        },
                        new
                        {
                            BookingId = 4,
                            BookingDate = new DateTime(2025, 7, 3, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 100003,
                            Status = "Confirmed",
                            TotalAmount = 210.00m,
                            TotalTax = 21.00m
                        },
                        new
                        {
                            BookingId = 5,
                            BookingDate = new DateTime(2025, 7, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 100004,
                            Status = "Confirmed",
                            TotalAmount = 45.00m,
                            TotalTax = 4.50m
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.BookingDetail", b =>
                {
                    b.Property<int>("BookingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingDetailId"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("SeatInTripId")
                        .HasColumnType("int");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TicketTax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingDetailId");

                    b.HasIndex("BookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SeatInTripId")
                        .IsUnique();

                    b.ToTable("BookingDetails");

                    b.HasCheckConstraint("CK_BookingDetail_TicketPrice", "TicketPrice >= 0");

                    b.HasCheckConstraint("CK_BookingDetail_TicketTax", "TicketTax >= 0");

                    b.HasData(
                        new
                        {
                            BookingDetailId = 1,
                            BookingId = 1,
                            CustomerId = 1,
                            SeatInTripId = 1,
                            TicketPrice = 50.00m,
                            TicketTax = 5.00m
                        },
                        new
                        {
                            BookingDetailId = 2,
                            BookingId = 2,
                            CustomerId = 2,
                            SeatInTripId = 41,
                            TicketPrice = 80.00m,
                            TicketTax = 8.00m
                        },
                        new
                        {
                            BookingDetailId = 3,
                            BookingId = 3,
                            CustomerId = 3,
                            SeatInTripId = 81,
                            TicketPrice = 140.00m,
                            TicketTax = 14.00m
                        },
                        new
                        {
                            BookingDetailId = 4,
                            BookingId = 4,
                            CustomerId = 4,
                            SeatInTripId = 111,
                            TicketPrice = 210.00m,
                            TicketTax = 21.00m
                        },
                        new
                        {
                            BookingDetailId = 5,
                            BookingId = 5,
                            CustomerId = 5,
                            SeatInTripId = 141,
                            TicketPrice = 45.00m,
                            TicketTax = 4.50m
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"), 1L, 1);

                    b.Property<string>("BusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("BusId");

                    b.HasIndex("BusCode")
                        .IsUnique();

                    b.HasIndex("BusNumber")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Buses");

                    b.HasCheckConstraint("CK_Bus_BusCode", "LEN(BusCode) = 5 AND BusCode NOT LIKE '%[^0-9]%'");

                    b.HasCheckConstraint("CK_Bus_TotalSeats", "TotalSeats > 0");

                    b.HasData(
                        new
                        {
                            BusId = 1,
                            BusCode = "10001",
                            BusNumber = "NY123",
                            TotalSeats = 40,
                            TypeId = 1
                        },
                        new
                        {
                            BusId = 2,
                            BusCode = "10002",
                            BusNumber = "CA456",
                            TotalSeats = 30,
                            TypeId = 4
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.BusType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TypeId");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("BusTypes");

                    b.HasCheckConstraint("CK_BusType_PriceMultiplier", "PriceMultiplier >= 1.0");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            PriceMultiplier = 1.0m,
                            TypeName = "Express"
                        },
                        new
                        {
                            TypeId = 2,
                            PriceMultiplier = 1.2m,
                            TypeName = "Luxury"
                        },
                        new
                        {
                            TypeId = 3,
                            PriceMultiplier = 1.4m,
                            TypeName = "Volvo Non-A/C"
                        },
                        new
                        {
                            TypeId = 4,
                            PriceMultiplier = 1.6m,
                            TypeName = "Volvo A/C"
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.CancellationRule", b =>
                {
                    b.Property<int>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuleId"), 1L, 1);

                    b.Property<int>("DaysBeforeDeparture")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PenaltyPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RuleId");

                    b.ToTable("CancellationRules");

                    b.HasCheckConstraint("CK_CancellationRule_DaysBeforeDeparture", "DaysBeforeDeparture >= 0");

                    b.HasCheckConstraint("CK_CancellationRule_PenaltyPercentage", "PenaltyPercentage >= 0 AND PenaltyPercentage <= 100");

                    b.HasData(
                        new
                        {
                            RuleId = 1,
                            DaysBeforeDeparture = 2,
                            Description = "Full refund for cancellations 2+ days before departure",
                            PenaltyPercentage = 0m
                        },
                        new
                        {
                            RuleId = 2,
                            DaysBeforeDeparture = 1,
                            Description = "15% penalty for cancellations 1 day before departure",
                            PenaltyPercentage = 15m
                        },
                        new
                        {
                            RuleId = 3,
                            DaysBeforeDeparture = 0,
                            Description = "30% penalty for cancellations on departure day",
                            PenaltyPercentage = 30m
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Name", "DateOfBirth");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            PhoneNumber = "617-555-9012"
                        },
                        new
                        {
                            CustomerId = 2,
                            DateOfBirth = new DateTime(2000, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.williams@example.com",
                            Name = "Bob Williams",
                            PhoneNumber = "213-555-3456"
                        },
                        new
                        {
                            CustomerId = 3,
                            DateOfBirth = new DateTime(1995, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.brown@example.com",
                            Name = "Charlie Brown",
                            PhoneNumber = "415-555-6789"
                        },
                        new
                        {
                            CustomerId = 4,
                            DateOfBirth = new DateTime(1988, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dana.white@example.com",
                            Name = "Dana White",
                            PhoneNumber = "206-555-1234"
                        },
                        new
                        {
                            CustomerId = 5,
                            DateOfBirth = new DateTime(1992, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "evan.davis@example.com",
                            Name = "Evan Davis",
                            PhoneNumber = "312-555-5678"
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Qualifications")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasCheckConstraint("CK_Employee_Age", "Age >= 18");

                    b.HasData(
                        new
                        {
                            EmployeeId = 100000,
                            Age = 48,
                            Email = "admin@example.com",
                            Location = "New York, NY",
                            Name = "Super Admin",
                            PasswordHash = "$2a$12$GquGNXIqWkN9fFKR.OmDi.o3DkbahSX2MkVjf..hdeEeBPH6qSO66",
                            PhoneNumber = "001-555-1111",
                            Qualifications = "Bachelor’s Degree",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            EmployeeId = 100001,
                            Age = 35,
                            Email = "john.doe@example.com",
                            Location = "New York, NY",
                            Name = "John Doe",
                            PasswordHash = "$2a$12$yv5t3yIkt3F9hYGUwiOKe.xFAapbty9TLngpxeQ0KmlbpBYj30Isu",
                            PhoneNumber = "212-555-1234",
                            Qualifications = "Bachelor’s Degree",
                            Role = "Admin",
                            Username = "john.doe"
                        },
                        new
                        {
                            EmployeeId = 100002,
                            Age = 28,
                            Email = "jane.smith@example.com",
                            Location = "San Francisco, CA",
                            Name = "Jane Smith",
                            PasswordHash = "$2a$12$4FleyqJI7PgWsDZ/E1Gf3eocMPjVfQiuZX6ONVx9GKXiSy8JI5AJW",
                            PhoneNumber = "415-555-5678",
                            Qualifications = "Associate Degree",
                            Role = "Employee",
                            Username = "jane.smith"
                        },
                        new
                        {
                            EmployeeId = 100003,
                            Age = 32,
                            Email = "mike.jones@example.com",
                            Location = "Los Angeles, CA",
                            Name = "Mike Jones",
                            PasswordHash = "$2a$12$8kP9m2nQ3rL6vT8J4yZ9u.eF7pQ8vX2MkYjf..hdeEeBPH6qSO66",
                            PhoneNumber = "213-555-9012",
                            Qualifications = "High School Diploma",
                            Role = "Employee",
                            Username = "mike.jones"
                        },
                        new
                        {
                            EmployeeId = 100004,
                            Age = 40,
                            Email = "sarah.lee@example.com",
                            Location = "Seattle, WA",
                            Name = "Sarah Lee",
                            PasswordHash = "$2a$12$3jK7pL9mQ2rT4vH8yZ6u.eF7pQ8vX2MkYjf..hdeEeBPH6qSO66",
                            PhoneNumber = "206-555-3456",
                            Qualifications = "Bachelor’s Degree",
                            Role = "Employee",
                            Username = "sarah.lee"
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"), 1L, 1);

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EndLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RouteCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StartLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RouteId");

                    b.HasIndex("RouteCode")
                        .IsUnique();

                    b.ToTable("Routes");

                    b.HasCheckConstraint("CK_Route_BasePrice", "BasePrice > 0");

                    b.HasCheckConstraint("CK_Route_Distance", "Distance > 0");

                    b.HasData(
                        new
                        {
                            RouteId = 1,
                            BasePrice = 50.00m,
                            Distance = 215.0m,
                            EndLocation = "Boston, MA",
                            RouteCode = "R001",
                            StartLocation = "New York, NY"
                        },
                        new
                        {
                            RouteId = 2,
                            BasePrice = 80.00m,
                            Distance = 380.0m,
                            EndLocation = "San Francisco, CA",
                            RouteCode = "R002",
                            StartLocation = "Los Angeles, CA"
                        },
                        new
                        {
                            RouteId = 3,
                            BasePrice = 120.00m,
                            Distance = 1000.0m,
                            EndLocation = "Denver, CO",
                            RouteCode = "R003",
                            StartLocation = "Chicago, IL"
                        },
                        new
                        {
                            RouteId = 4,
                            BasePrice = 40.00m,
                            Distance = 200.0m,
                            EndLocation = "Austin, TX",
                            RouteCode = "R004",
                            StartLocation = "Houston, TX"
                        },
                        new
                        {
                            RouteId = 5,
                            BasePrice = 45.00m,
                            Distance = 180.0m,
                            EndLocation = "Portland, OR",
                            RouteCode = "R005",
                            StartLocation = "Seattle, WA"
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.RouteStop", b =>
                {
                    b.Property<int>("RouteStopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteStopId"), 1L, 1);

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("StopLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StopOrder")
                        .HasColumnType("int");

                    b.HasKey("RouteStopId");

                    b.HasIndex("RouteId", "StopLocation")
                        .IsUnique();

                    b.HasIndex("RouteId", "StopOrder")
                        .IsUnique();

                    b.ToTable("RouteStops");

                    b.HasCheckConstraint("CK_RouteStop_StopOrder", "StopOrder >= 1");

                    b.HasData(
                        new
                        {
                            RouteStopId = 1,
                            RouteId = 1,
                            StopLocation = "Hartford, CT",
                            StopOrder = 1
                        },
                        new
                        {
                            RouteStopId = 2,
                            RouteId = 1,
                            StopLocation = "Providence, RI",
                            StopOrder = 2
                        },
                        new
                        {
                            RouteStopId = 3,
                            RouteId = 2,
                            StopLocation = "Santa Barbara, CA",
                            StopOrder = 1
                        },
                        new
                        {
                            RouteStopId = 4,
                            RouteId = 2,
                            StopLocation = "Monterey, CA",
                            StopOrder = 2
                        },
                        new
                        {
                            RouteStopId = 5,
                            RouteId = 3,
                            StopLocation = "Omaha, NE",
                            StopOrder = 1
                        },
                        new
                        {
                            RouteStopId = 6,
                            RouteId = 3,
                            StopLocation = "Cheyenne, WY",
                            StopOrder = 2
                        },
                        new
                        {
                            RouteStopId = 7,
                            RouteId = 4,
                            StopLocation = "San Antonio, TX",
                            StopOrder = 1
                        },
                        new
                        {
                            RouteStopId = 8,
                            RouteId = 4,
                            StopLocation = "Waco, TX",
                            StopOrder = 2
                        },
                        new
                        {
                            RouteStopId = 9,
                            RouteId = 5,
                            StopLocation = "Tacoma, WA",
                            StopOrder = 1
                        },
                        new
                        {
                            RouteStopId = 10,
                            RouteId = 5,
                            StopLocation = "Salem, OR",
                            StopOrder = 2
                        });
                });

            modelBuilder.Entity("BusTrip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"), 1L, 1);

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.HasIndex("RouteId");

                    b.HasIndex("BusId", "DepartureTime")
                        .IsUnique();

                    b.ToTable("BusTrips");

                    b.HasCheckConstraint("CK_BusTrip_AvailableSeats", "AvailableSeats >= 0");

                    b.HasData(
                        new
                        {
                            TripId = 1,
                            ArrivalTime = new DateTime(2025, 7, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableSeats = 40,
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 7, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 1,
                            Status = "Scheduled"
                        },
                        new
                        {
                            TripId = 2,
                            ArrivalTime = new DateTime(2025, 7, 3, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableSeats = 40,
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 7, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 2,
                            Status = "Scheduled"
                        },
                        new
                        {
                            TripId = 3,
                            ArrivalTime = new DateTime(2025, 7, 3, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableSeats = 30,
                            BusId = 2,
                            DepartureTime = new DateTime(2025, 7, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 3,
                            Status = "Scheduled"
                        },
                        new
                        {
                            TripId = 4,
                            ArrivalTime = new DateTime(2025, 7, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableSeats = 30,
                            BusId = 2,
                            DepartureTime = new DateTime(2025, 7, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 4,
                            Status = "Scheduled"
                        },
                        new
                        {
                            TripId = 5,
                            ArrivalTime = new DateTime(2025, 7, 3, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailableSeats = 40,
                            BusId = 1,
                            DepartureTime = new DateTime(2025, 7, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            RouteId = 5,
                            Status = "Scheduled"
                        });
                });

            modelBuilder.Entity("SeatInBusTrip", b =>
                {
                    b.Property<int>("SeatInTripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatInTripId"), 1L, 1);

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("SeatInTripId");

                    b.HasIndex("TripId", "SeatNumber")
                        .IsUnique();

                    b.ToTable("SeatsInBusTrip");

                    b.HasData(
                        new
                        {
                            SeatInTripId = 1,
                            IsAvailable = true,
                            SeatNumber = "A1",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 2,
                            IsAvailable = true,
                            SeatNumber = "A2",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 3,
                            IsAvailable = true,
                            SeatNumber = "A3",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 4,
                            IsAvailable = true,
                            SeatNumber = "A4",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 5,
                            IsAvailable = true,
                            SeatNumber = "A5",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 6,
                            IsAvailable = true,
                            SeatNumber = "A6",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 7,
                            IsAvailable = true,
                            SeatNumber = "A7",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 8,
                            IsAvailable = true,
                            SeatNumber = "A8",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 9,
                            IsAvailable = true,
                            SeatNumber = "A9",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 10,
                            IsAvailable = true,
                            SeatNumber = "A10",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 11,
                            IsAvailable = true,
                            SeatNumber = "B1",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 12,
                            IsAvailable = true,
                            SeatNumber = "B2",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 13,
                            IsAvailable = true,
                            SeatNumber = "B3",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 14,
                            IsAvailable = true,
                            SeatNumber = "B4",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 15,
                            IsAvailable = true,
                            SeatNumber = "B5",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 16,
                            IsAvailable = true,
                            SeatNumber = "B6",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 17,
                            IsAvailable = true,
                            SeatNumber = "B7",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 18,
                            IsAvailable = true,
                            SeatNumber = "B8",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 19,
                            IsAvailable = true,
                            SeatNumber = "B9",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 20,
                            IsAvailable = true,
                            SeatNumber = "B10",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 21,
                            IsAvailable = true,
                            SeatNumber = "C1",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 22,
                            IsAvailable = true,
                            SeatNumber = "C2",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 23,
                            IsAvailable = true,
                            SeatNumber = "C3",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 24,
                            IsAvailable = true,
                            SeatNumber = "C4",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 25,
                            IsAvailable = true,
                            SeatNumber = "C5",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 26,
                            IsAvailable = true,
                            SeatNumber = "C6",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 27,
                            IsAvailable = true,
                            SeatNumber = "C7",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 28,
                            IsAvailable = true,
                            SeatNumber = "C8",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 29,
                            IsAvailable = true,
                            SeatNumber = "C9",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 30,
                            IsAvailable = true,
                            SeatNumber = "C10",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 31,
                            IsAvailable = true,
                            SeatNumber = "D1",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 32,
                            IsAvailable = true,
                            SeatNumber = "D2",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 33,
                            IsAvailable = true,
                            SeatNumber = "D3",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 34,
                            IsAvailable = true,
                            SeatNumber = "D4",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 35,
                            IsAvailable = true,
                            SeatNumber = "D5",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 36,
                            IsAvailable = true,
                            SeatNumber = "D6",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 37,
                            IsAvailable = true,
                            SeatNumber = "D7",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 38,
                            IsAvailable = true,
                            SeatNumber = "D8",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 39,
                            IsAvailable = true,
                            SeatNumber = "D9",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 40,
                            IsAvailable = true,
                            SeatNumber = "D10",
                            TripId = 1
                        },
                        new
                        {
                            SeatInTripId = 41,
                            IsAvailable = true,
                            SeatNumber = "A1",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 42,
                            IsAvailable = true,
                            SeatNumber = "A2",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 43,
                            IsAvailable = true,
                            SeatNumber = "A3",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 44,
                            IsAvailable = true,
                            SeatNumber = "A4",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 45,
                            IsAvailable = true,
                            SeatNumber = "A5",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 46,
                            IsAvailable = true,
                            SeatNumber = "A6",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 47,
                            IsAvailable = true,
                            SeatNumber = "A7",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 48,
                            IsAvailable = true,
                            SeatNumber = "A8",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 49,
                            IsAvailable = true,
                            SeatNumber = "A9",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 50,
                            IsAvailable = true,
                            SeatNumber = "A10",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 51,
                            IsAvailable = true,
                            SeatNumber = "B1",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 52,
                            IsAvailable = true,
                            SeatNumber = "B2",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 53,
                            IsAvailable = true,
                            SeatNumber = "B3",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 54,
                            IsAvailable = true,
                            SeatNumber = "B4",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 55,
                            IsAvailable = true,
                            SeatNumber = "B5",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 56,
                            IsAvailable = true,
                            SeatNumber = "B6",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 57,
                            IsAvailable = true,
                            SeatNumber = "B7",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 58,
                            IsAvailable = true,
                            SeatNumber = "B8",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 59,
                            IsAvailable = true,
                            SeatNumber = "B9",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 60,
                            IsAvailable = true,
                            SeatNumber = "B10",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 61,
                            IsAvailable = true,
                            SeatNumber = "C1",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 62,
                            IsAvailable = true,
                            SeatNumber = "C2",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 63,
                            IsAvailable = true,
                            SeatNumber = "C3",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 64,
                            IsAvailable = true,
                            SeatNumber = "C4",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 65,
                            IsAvailable = true,
                            SeatNumber = "C5",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 66,
                            IsAvailable = true,
                            SeatNumber = "C6",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 67,
                            IsAvailable = true,
                            SeatNumber = "C7",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 68,
                            IsAvailable = true,
                            SeatNumber = "C8",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 69,
                            IsAvailable = true,
                            SeatNumber = "C9",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 70,
                            IsAvailable = true,
                            SeatNumber = "C10",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 71,
                            IsAvailable = true,
                            SeatNumber = "D1",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 72,
                            IsAvailable = true,
                            SeatNumber = "D2",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 73,
                            IsAvailable = true,
                            SeatNumber = "D3",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 74,
                            IsAvailable = true,
                            SeatNumber = "D4",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 75,
                            IsAvailable = true,
                            SeatNumber = "D5",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 76,
                            IsAvailable = true,
                            SeatNumber = "D6",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 77,
                            IsAvailable = true,
                            SeatNumber = "D7",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 78,
                            IsAvailable = true,
                            SeatNumber = "D8",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 79,
                            IsAvailable = true,
                            SeatNumber = "D9",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 80,
                            IsAvailable = true,
                            SeatNumber = "D10",
                            TripId = 2
                        },
                        new
                        {
                            SeatInTripId = 81,
                            IsAvailable = true,
                            SeatNumber = "A1",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 82,
                            IsAvailable = true,
                            SeatNumber = "A2",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 83,
                            IsAvailable = true,
                            SeatNumber = "A3",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 84,
                            IsAvailable = true,
                            SeatNumber = "A4",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 85,
                            IsAvailable = true,
                            SeatNumber = "A5",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 86,
                            IsAvailable = true,
                            SeatNumber = "A6",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 87,
                            IsAvailable = true,
                            SeatNumber = "A7",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 88,
                            IsAvailable = true,
                            SeatNumber = "A8",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 89,
                            IsAvailable = true,
                            SeatNumber = "A9",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 90,
                            IsAvailable = true,
                            SeatNumber = "A10",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 91,
                            IsAvailable = true,
                            SeatNumber = "B1",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 92,
                            IsAvailable = true,
                            SeatNumber = "B2",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 93,
                            IsAvailable = true,
                            SeatNumber = "B3",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 94,
                            IsAvailable = true,
                            SeatNumber = "B4",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 95,
                            IsAvailable = true,
                            SeatNumber = "B5",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 96,
                            IsAvailable = true,
                            SeatNumber = "B6",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 97,
                            IsAvailable = true,
                            SeatNumber = "B7",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 98,
                            IsAvailable = true,
                            SeatNumber = "B8",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 99,
                            IsAvailable = true,
                            SeatNumber = "B9",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 100,
                            IsAvailable = true,
                            SeatNumber = "B10",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 101,
                            IsAvailable = true,
                            SeatNumber = "C1",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 102,
                            IsAvailable = true,
                            SeatNumber = "C2",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 103,
                            IsAvailable = true,
                            SeatNumber = "C3",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 104,
                            IsAvailable = true,
                            SeatNumber = "C4",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 105,
                            IsAvailable = true,
                            SeatNumber = "C5",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 106,
                            IsAvailable = true,
                            SeatNumber = "C6",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 107,
                            IsAvailable = true,
                            SeatNumber = "C7",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 108,
                            IsAvailable = true,
                            SeatNumber = "C8",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 109,
                            IsAvailable = true,
                            SeatNumber = "C9",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 110,
                            IsAvailable = true,
                            SeatNumber = "C10",
                            TripId = 3
                        },
                        new
                        {
                            SeatInTripId = 111,
                            IsAvailable = true,
                            SeatNumber = "A1",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 112,
                            IsAvailable = true,
                            SeatNumber = "A2",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 113,
                            IsAvailable = true,
                            SeatNumber = "A3",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 114,
                            IsAvailable = true,
                            SeatNumber = "A4",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 115,
                            IsAvailable = true,
                            SeatNumber = "A5",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 116,
                            IsAvailable = true,
                            SeatNumber = "A6",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 117,
                            IsAvailable = true,
                            SeatNumber = "A7",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 118,
                            IsAvailable = true,
                            SeatNumber = "A8",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 119,
                            IsAvailable = true,
                            SeatNumber = "A9",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 120,
                            IsAvailable = true,
                            SeatNumber = "A10",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 121,
                            IsAvailable = true,
                            SeatNumber = "B1",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 122,
                            IsAvailable = true,
                            SeatNumber = "B2",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 123,
                            IsAvailable = true,
                            SeatNumber = "B3",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 124,
                            IsAvailable = true,
                            SeatNumber = "B4",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 125,
                            IsAvailable = true,
                            SeatNumber = "B5",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 126,
                            IsAvailable = true,
                            SeatNumber = "B6",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 127,
                            IsAvailable = true,
                            SeatNumber = "B7",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 128,
                            IsAvailable = true,
                            SeatNumber = "B8",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 129,
                            IsAvailable = true,
                            SeatNumber = "B9",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 130,
                            IsAvailable = true,
                            SeatNumber = "B10",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 131,
                            IsAvailable = true,
                            SeatNumber = "C1",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 132,
                            IsAvailable = true,
                            SeatNumber = "C2",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 133,
                            IsAvailable = true,
                            SeatNumber = "C3",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 134,
                            IsAvailable = true,
                            SeatNumber = "C4",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 135,
                            IsAvailable = true,
                            SeatNumber = "C5",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 136,
                            IsAvailable = true,
                            SeatNumber = "C6",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 137,
                            IsAvailable = true,
                            SeatNumber = "C7",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 138,
                            IsAvailable = true,
                            SeatNumber = "C8",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 139,
                            IsAvailable = true,
                            SeatNumber = "C9",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 140,
                            IsAvailable = true,
                            SeatNumber = "C10",
                            TripId = 4
                        },
                        new
                        {
                            SeatInTripId = 141,
                            IsAvailable = true,
                            SeatNumber = "A1",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 142,
                            IsAvailable = true,
                            SeatNumber = "A2",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 143,
                            IsAvailable = true,
                            SeatNumber = "A3",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 144,
                            IsAvailable = true,
                            SeatNumber = "A4",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 145,
                            IsAvailable = true,
                            SeatNumber = "A5",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 146,
                            IsAvailable = true,
                            SeatNumber = "A6",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 147,
                            IsAvailable = true,
                            SeatNumber = "A7",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 148,
                            IsAvailable = true,
                            SeatNumber = "A8",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 149,
                            IsAvailable = true,
                            SeatNumber = "A9",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 150,
                            IsAvailable = true,
                            SeatNumber = "A10",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 151,
                            IsAvailable = true,
                            SeatNumber = "B1",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 152,
                            IsAvailable = true,
                            SeatNumber = "B2",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 153,
                            IsAvailable = true,
                            SeatNumber = "B3",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 154,
                            IsAvailable = true,
                            SeatNumber = "B4",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 155,
                            IsAvailable = true,
                            SeatNumber = "B5",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 156,
                            IsAvailable = true,
                            SeatNumber = "B6",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 157,
                            IsAvailable = true,
                            SeatNumber = "B7",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 158,
                            IsAvailable = true,
                            SeatNumber = "B8",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 159,
                            IsAvailable = true,
                            SeatNumber = "B9",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 160,
                            IsAvailable = true,
                            SeatNumber = "B10",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 161,
                            IsAvailable = true,
                            SeatNumber = "C1",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 162,
                            IsAvailable = true,
                            SeatNumber = "C2",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 163,
                            IsAvailable = true,
                            SeatNumber = "C3",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 164,
                            IsAvailable = true,
                            SeatNumber = "C4",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 165,
                            IsAvailable = true,
                            SeatNumber = "C5",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 166,
                            IsAvailable = true,
                            SeatNumber = "C6",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 167,
                            IsAvailable = true,
                            SeatNumber = "C7",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 168,
                            IsAvailable = true,
                            SeatNumber = "C8",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 169,
                            IsAvailable = true,
                            SeatNumber = "C9",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 170,
                            IsAvailable = true,
                            SeatNumber = "C10",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 171,
                            IsAvailable = true,
                            SeatNumber = "D1",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 172,
                            IsAvailable = true,
                            SeatNumber = "D2",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 173,
                            IsAvailable = true,
                            SeatNumber = "D3",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 174,
                            IsAvailable = true,
                            SeatNumber = "D4",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 175,
                            IsAvailable = true,
                            SeatNumber = "D5",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 176,
                            IsAvailable = true,
                            SeatNumber = "D6",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 177,
                            IsAvailable = true,
                            SeatNumber = "D7",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 178,
                            IsAvailable = true,
                            SeatNumber = "D8",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 179,
                            IsAvailable = true,
                            SeatNumber = "D9",
                            TripId = 5
                        },
                        new
                        {
                            SeatInTripId = 180,
                            IsAvailable = true,
                            SeatNumber = "D10",
                            TripId = 5
                        });
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Booking", b =>
                {
                    b.HasOne("BusTicketApi.Models.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.BookingDetail", b =>
                {
                    b.HasOne("BusTicketApi.Models.Entities.Booking", "Booking")
                        .WithMany("Details")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketApi.Models.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeatInBusTrip", "SeatInTrip")
                        .WithMany()
                        .HasForeignKey("SeatInTripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Customer");

                    b.Navigation("SeatInTrip");
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Bus", b =>
                {
                    b.HasOne("BusTicketApi.Models.Entities.BusType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.RouteStop", b =>
                {
                    b.HasOne("BusTicketApi.Models.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("BusTrip", b =>
                {
                    b.HasOne("BusTicketApi.Models.Entities.Bus", "Bus")
                        .WithMany("Trips")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketApi.Models.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("SeatInBusTrip", b =>
                {
                    b.HasOne("BusTrip", "Trip")
                        .WithMany("Seats")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Booking", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("BusTicketApi.Models.Entities.Bus", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("BusTrip", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
